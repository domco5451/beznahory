---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import Heading from "../../components/basic/Heading.astro";
import PageLayout from "../../layouts/PageLayout.astro";

const allPosts = await getCollection("blog");

const sortedPosts = allPosts.sort((a, b) => {
  const dateA = new Date(a.data.pubDate);
  const dateB = new Date(b.data.pubDate);
  return dateB.getTime() - dateA.getTime();
});

const postsWithReadingTime = await Promise.all(
  sortedPosts.map(async (post) => {
    const { remarkPluginFrontmatter } = await post.render();
    return {
      ...post,
      minutesRead: remarkPluginFrontmatter.minutesRead,
    };
  })
);
---

<PageLayout title="Blog">
  <Heading
    blogTitle="Blog"
    blogDescription="Naše najnovšie túry, tipy a akcie"
    iconName="computer"
  />
  <div class="container">
    <div class="main-grid">
      {
        postsWithReadingTime.length > 0 &&
          postsWithReadingTime.map((post: any, i: number) => (
            <article class="wrapper">
              <a href={`/blog/${post.slug}`}>
                <Image
                  class="thumbnail"
                  src={post.data.thumbnail}
                  alt={post.data.thumbnailAlt}
                  loading={i > 1 ? "lazy" : "eager"}
                />
              </a>
              <div class="content-wrapper">
                <header class="header-blog">
                  <h2 class="title">
                    <a href={`/blog/${post.slug}`}>{post.data.title}</a>
                  </h2>
                  <p class="read">{post.minutesRead}</p>
                  <p class="description">{post.data.description}</p>
                </header>
                <footer class="wrapper-flex">
                  <div class="author-flex">
                    <Image
                      class="pfp"
                      width={50}
                      src={post.data.pfp}
                      alt={post.data.pfpAlt}
                      loading="lazy"
                    />
                    <div>
                      <p>
                        <strong>{post.data.author}</strong>
                      </p>
                      <p>
                        {new Date(post.data.pubDate).toLocaleDateString(
                          "sk-SK",
                          {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                          }
                        )}
                      </p>
                    </div>
                  </div>
                  <a class="cursor-flex" href={`/blog/${post.slug}`}>
                    <span>Čítať ďalej</span>
                    <Icon class="cursor" name="cursor" size={15} />
                  </a>
                </footer>
              </div>
            </article>
          ))
      }
    </div>
    {
      postsWithReadingTime.length === 0 && (
        <div class="no-posts">
          <Icon class="icon" name="odoInfo" size={30} />
          <p>Zatiaľ žiadne príspevky</p>
        </div>
      )
    }
  </div>
</PageLayout>
<style>
  .container {
    max-width: 1500px;
    margin: 50px auto;
    padding: 0 20px;
  }
  .blog-header h1 {
    font-size: 4rem;
    font-weight: bolder;
  }
  .blog-header h2 {
    font-size: 1.5rem;
  }
  .title a:visited {
    color: purple;
  }
  .blog-header {
    background-image: url("../../icons/pozadieAbout.svg");
    background-size: cover;
    padding-inline: 20%;
    padding-block: 35px;
  }
  .no-posts {
    display: flex;
    gap: 10px;
    align-items: center;
    justify-content: center;
    padding: 10px;
    background: #172238;
    border-radius: 10px;
    width: 100%;
    color: white;
    font-size: 1.2rem;
  }
  .icon {
    color: #f7c948;
  }
  .blog-wrapper {
    max-width: 1200px;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  .read {
    margin-block: 10px;
    font-weight: bold;
  }
  .cursor {
    margin-left: 5px;
    fill: var(--bg-primary);
    transition: transform 0.2s ease-in-out;
  }
  header h2 {
    color: #0055ff;
    margin-block-end: 15px;
  }
  header h2 a {
    text-decoration: none;
    font-weight: 500;
    font-size: 1.8rem;
  }
  header h2 a:hover {
    text-decoration: underline;
  }
  .wrapper {
    border-radius: 15px;
    border: 1px solid var(--border-color);
    display: flex;
    flex-direction: column;
  }
  .main-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 30px;
  }
  .thumbnail {
    max-width: 100%;
    height: 300px;
    border-radius: 13px 13px 0 0;
    object-fit: cover;
  }
  .author-flex {
    display: flex;
    align-items: center;
    gap: 15px;
    flex: 1;
  }
  .wrapper-flex {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-block-start: 15px;
  }
  .description {
    line-height: 1.8;
  }
  .pfp {
    width: 50px;
    height: 50px;
    object-fit: cover;
    border-radius: 100%;
  }
  .cursor-flex {
    display: flex;
    align-items: center;
    background: var(--text-primary);
    padding: 8px;
    color: var(--bg-primary);
    text-decoration: none;
    border-radius: 5px;
  }
  .cursor-flex:hover {
    background-color: var(--hover-bg-secondary-2);
  }
  .cursor-flex:hover .cursor {
    transform: scale(1.3);
  }
  .content-wrapper {
    padding: 30px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    justify-content: space-between;
    flex: 1;
  }
  .filter-flex {
    display: flex;
    gap: 5px;
    align-items: center;
  }
  .margin-nadpis {
    margin-bottom: 15px;
  }
  .margin-nadpis h3 {
    font-weight: 300;
  }
  @media (max-width: 900px) {
    .description {
      overflow: hidden;
      display: -webkit-box;
      -webkit-line-clamp: 4; /* number of lines to show */
      line-clamp: 4;
      -webkit-box-orient: vertical;
    }
  }
  @media (max-width: 815px) {
    .main-grid {
      grid-template-columns: 1fr;
    }
  }
  @media (max-width: 500px) {
    .description {
      overflow: hidden;
      display: -webkit-box;
      -webkit-line-clamp: 4; /* number of lines to show */
      line-clamp: 4;
      -webkit-box-orient: vertical;
    }
  }
  @media (max-width: 450px) {
    .wrapper-flex {
      flex-direction: column;
      justify-content: center;
      gap: 20px;
    }
    .cursor-flex {
      padding: 10px 50px;
    }
  }
</style>
