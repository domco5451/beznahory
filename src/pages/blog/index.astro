---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import PageLayout from "../../layouts/PageLayout.astro";

const allPosts = await getCollection("blog");

const postsWithReadingTime = await Promise.all(
  allPosts.map(async (post) => {
    const { remarkPluginFrontmatter } = await post.render();
    return {
      ...post,
      minutesRead: remarkPluginFrontmatter.minutesRead
    };
  })
);

---
{/* Dorobiť Image nech nie je nad header */}
<PageLayout title="Blog">
  <div class="container">
      <h1>Blog</h1>
    <section class="main-grid">
      {
        postsWithReadingTime.map((post: any, i: number) => (
          <article class="wrapper">
            <a href={`/blog/${post.slug}`}>
              <Image
                  class="thumbnail"
                  src={post.data.thumbnail}
                  alt={post.data.thumbnailAlt}
                  loading={i < 4 ? "eager" : "lazy"}
                />
            </a>
            <header class="header-blog">
              <h2><a href={`/blog/${post.slug}`}>{post.data.title}</a></h2>
              <p>{post.minutesRead}</p>
            </header>
            <p class="description">{post.data.description}</p>
            <footer class="wrapper-flex">
              <div class="author-flex">
                <Image
                  class="pfp"
                  width={50}
                  src={post.data.pfp}
                  alt={post.data.pfpAlt}
                  loading={i < 2 ? "eager" : "lazy"}
                />
                <div>
                  <p><strong>{post.data.author}</strong></p>
                  <p>{post.data.pubDate.toLocaleDateString()}</p>
                </div>
              </div>
              <a class="cursor-flex" href={`/blog/${post.slug}`}>
                <span>Čítať ďalej</span>
                <Icon class="cursor" name="cursor" size={15} />
              </a>
              </footer>
          </article>
        ))
      }
    </section>
  </div>
</PageLayout>
<style>
.container {
    max-width: 1400px;
    margin: auto;
}
.container h1 {
    margin-block: 30px;
    text-align: center;
    font-size: 2.5rem;
}
.cursor {
    margin-left: 5px;
    fill: var(--cursor-icon);
}
header {
  padding: 20px 30px 30px 30px;
}
header h2 {
  margin-block-end: 20px;
  color: var(--nav-hover-text);
}
header h2 a {
  text-decoration: none;
  font-weight: 500;
  font-size: 1.8rem;
}
header h2 a:hover {
  text-decoration: underline;
}
.description {
  padding-inline: 30px;
}
footer {
  padding: 30px;
}
.wrapper {
    border-radius: 15px;
    border: 1px solid var(--border-color);
}
.main-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 30px;
}
.thumbnail {
    max-width: 100%;
    height: 300px;
    border-radius: 13px 13px 0 0;
    object-fit: cover;
}
.author-flex {
    display: flex;
    align-items: center;
    gap: 15px;
}
.wrapper-flex {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-block-start: 15px;
}
.pfp {
    width: 50px;
    height: 50px;
    object-fit: cover;
    border-radius: 100%;
}
.cursor-flex {
    display: flex;
    align-items: center;
    background: var(--cursor-bg);
    padding: 8px;
    color: var(--cursor-text);
    text-decoration: none;
    border-radius: 5px;
}
.cursor-flex:hover {
    background-color: var(--nav-hover-bg);
    color: var(--nav-hover-text);
}
.cursor-flex:hover .cursor {
    fill: var(--nav-hover-text);
}
.content-wrapper {
    padding: 30px;
}
.filter-flex {
    display: flex;
    gap: 5px;
    align-items: center;
}
.filter-flex svg {
    width: 35px;
}
.margin-nadpis {
    margin-bottom: 15px;
}
.margin-nadpis h3 {
    font-weight: 300;
}
@media (max-width: 768px) {
    .main-grid {
      grid-template-columns: 1fr;
      padding: 15px;
    }
</style>
