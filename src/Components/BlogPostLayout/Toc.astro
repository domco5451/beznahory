---
const { headings } = Astro.props;
---

<div class="aside-container">
  <aside class="markdown-heading">
    <h2 class="page-title">Obsah článku</h2>
    {
      headings.map((heading: any) => (
        <a href={`#${heading.slug}`} class="page-description-container">
          <p class="page-description">{heading.text}</p>
        </a>
      ))
    }
  </aside>
</div>
<style>
  .markdown-heading .page-title {
    font-size: 1.3rem;
    color: var(--heading-text);
    margin-bottom: 10px;
    letter-spacing: 2px;
  }
  .markdown-heading .page-description {
    font-size: 0.85rem;
    color: black;
    padding-inline-end: 20px;
    padding-inline-start: 10px;
  }
  .page-description-container {
    height: 60px;
    width: fit-content;
    display: flex;
    align-items: center;
    gap: 15px;
    border-radius: 0px 5px 5px 0px;
    border-inline-start: 4px solid var(--border-color);
  }
  .page-description-container:hover .page-description {
    color: var(--heading-text);
  }
  .page-description-container.active {
    background: rgba(173, 216, 230, 0.397);
    border-inline-start: 4px solid var(--heading-text);
  }
</style>
<script>
  const headingEls = Array.from(document.querySelectorAll("article h2[id]"));
  const visibility = new Map(); // id => boolean
  let lastActiveId: any = null;

  function applyClasses() {
    const visibleIds = headingEls
      .filter((h) => visibility.get(h.id))
      .map((h) => h.id);
    if (visibleIds.length) {
      // add active to visible, remove from others
      headingEls.forEach((h) => {
        const link = document.querySelector(
          `.markdown-heading a[href="#${h.id}"]`
        );
        if (!link) return;
        if (visibility.get(h.id)) {
          link.classList.add("active");
        } else {
          link.classList.remove("active");
        }
      });
      // Last active - posledný vo vizuálnom (dokumentovom) poradí spomedzi viditeľných
      lastActiveId = visibleIds[visibleIds.length - 1];
    } else if (lastActiveId) {
      // Žiadny aktuálne nevidno - nechaj svietiť len lastActiveId
      headingEls.forEach((h) => {
        const link = document.querySelector(
          `.markdown-heading a[href="#${h.id}"]`
        );
        if (!link) return;
        if (h.id === lastActiveId) link.classList.add("active");
        else link.classList.remove("active");
      });
    }
  }

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        visibility.set(entry.target.id, entry.isIntersecting);
        if (entry.isIntersecting) {
          if (entry.isIntersecting) {
            // Update candidate immediately (v poradí dokumentu sa upraví applyClasses)
            lastActiveId = entry.target.id;
          }
        }
      });
      applyClasses();
    },
    {
      rootMargin: "0px",
      threshold: 1, // Fully visible
    }
  );

  headingEls.forEach((h) => {
    visibility.set(h.id, false);
    observer.observe(h);
  });
</script>
